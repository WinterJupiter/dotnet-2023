{
  "openapi": "3.0.1",
  "info": {
    "title": "PonrfServer",
    "version": "1.0"
  },
  "paths": {
    "/api/Analytics/view_all_customers": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get infomation about all customers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/auctions_without_full_sales": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get infomation about auctions without full sales",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionGetDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/customers_and_total_amount_in_district/{district}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get information about customers and total amount of privatized buildings in district",
        "parameters": [
          {
            "name": "district",
            "in": "path",
            "description": "District for search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Analytics/addresses_of_auction_participants": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get addresses of auction participants",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date of the auction",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Analytics/top_five_customers": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get top 5 customers who spent the most amount of money",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopCustomerGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopCustomerGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopCustomerGetDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/most_profitable_auctions": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get infomation about most profitable auctions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopAuctionGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopAuctionGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopAuctionGetDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Auction": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "Get information about all auctions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Auction"
        ],
        "summary": "Post a new auction",
        "requestBody": {
          "description": "New auction",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auction/{id}": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "Get an auction by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Auction's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Auction"
        ],
        "summary": "Put an auction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Auction's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New auction",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Auction"
        ],
        "summary": "Delete an auction by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Auction's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Building": {
      "get": {
        "tags": [
          "Building"
        ],
        "summary": "Get information about all buildings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildingGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildingGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildingGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Building"
        ],
        "summary": "Post a new building",
        "requestBody": {
          "description": "New building",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Building/{id}": {
      "get": {
        "tags": [
          "Building"
        ],
        "summary": "Get a building by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Building's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Building"
        ],
        "summary": "Put a building",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Building's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New building",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Building"
        ],
        "summary": "Delete a building by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Building's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get information about all customers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Post a new customer",
        "requestBody": {
          "description": "New customer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get a customer by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Put a customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New customer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete a customer by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PrivatizedBuilding": {
      "get": {
        "tags": [
          "PrivatizedBuilding"
        ],
        "summary": "Get information about all privatized buildings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivatizedBuildingGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivatizedBuildingGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivatizedBuildingGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PrivatizedBuilding"
        ],
        "summary": "Post a new privatized building",
        "requestBody": {
          "description": "New privatized building",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivatizedBuildingPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivatizedBuildingPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivatizedBuildingPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PrivatizedBuilding/{id}": {
      "get": {
        "tags": [
          "PrivatizedBuilding"
        ],
        "summary": "Get a privatized building by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Privatized building's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrivatizedBuildingGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivatizedBuildingGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivatizedBuildingGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivatizedBuilding"
        ],
        "summary": "Put a privatized building",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Privatized building's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New privatized building",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivatizedBuildingPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivatizedBuildingPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PrivatizedBuildingPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivatizedBuilding"
        ],
        "summary": "Delete a privatized building by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Privatized building's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuctionGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id is an identifier of auction",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Date is date of holding of the auction",
            "format": "date-time"
          },
          "organizer": {
            "type": "string",
            "description": "Organizer is a auction company",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AuctionPostDto for HTTP GET request"
      },
      "AuctionPostDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date is date of holding of the auction",
            "format": "date-time"
          },
          "organizer": {
            "type": "string",
            "description": "Organizer is a auction company",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AuctionPostDto for HTTP POST request"
      },
      "BuildingGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id is an identifier of building",
            "format": "int32"
          },
          "registNum": {
            "type": "string",
            "description": "RegistNum contains information about registration number of building",
            "nullable": true
          },
          "district": {
            "type": "string",
            "description": "District contains information about district where the building is located",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Street contains information about street where the building is located",
            "nullable": true
          },
          "houseNumber": {
            "type": "integer",
            "description": "HouseNumber contains information about house number of building",
            "format": "int32"
          },
          "area": {
            "type": "integer",
            "description": "Area contains information about building area",
            "format": "int32"
          },
          "floors": {
            "type": "integer",
            "description": "Floors contains information about number of floors of the building",
            "format": "int32"
          },
          "dateOfBuild": {
            "type": "string",
            "description": "DateOfBuild contains information about date of construction of the building",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "BuildingGetDto for HTTP GET request"
      },
      "BuildingPostDto": {
        "type": "object",
        "properties": {
          "registNum": {
            "type": "string",
            "description": "RegistNum contains information about registration number of building",
            "nullable": true
          },
          "district": {
            "type": "string",
            "description": "District contains information about district where the building is located",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Street contains information about street where the building is located",
            "nullable": true
          },
          "houseNumber": {
            "type": "integer",
            "description": "HouseNumber contains information about house number of building",
            "format": "int32"
          },
          "area": {
            "type": "integer",
            "description": "Area contains information about building area",
            "format": "int32"
          },
          "floors": {
            "type": "integer",
            "description": "Floors contains information about number of floors of the building",
            "format": "int32"
          },
          "dateOfBuild": {
            "type": "string",
            "description": "DateOfBuild contains information about date of construction of the building",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "BuildingPostDto for HTTP POST request"
      },
      "CustomerGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id is an identifier of customer",
            "format": "int32"
          },
          "passport": {
            "type": "string",
            "description": "Passport contains information about passport's number of customer",
            "nullable": true
          },
          "fio": {
            "type": "string",
            "description": "FIO contains information about full name of customer",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address contains information about home address of customer",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "CustomerGetDto for HTTP GET request"
      },
      "CustomerPostDto": {
        "type": "object",
        "properties": {
          "passport": {
            "type": "string",
            "description": "Passport contains information about passport's number of customer",
            "nullable": true
          },
          "fio": {
            "type": "string",
            "description": "FIO contains information about full name of customer",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address contains information about home address of customer",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AuctionPostDto for HTTP POST request"
      },
      "PrivatizedBuildingGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id is an identifier of privatized building",
            "format": "int32"
          },
          "dateOfSale": {
            "type": "string",
            "description": "DateOfSale contains information about date of sale of the building",
            "format": "date-time"
          },
          "firstCost": {
            "type": "integer",
            "description": "FirstCost is an original auction price",
            "format": "int32"
          },
          "secondCost": {
            "type": "integer",
            "description": "SecondCost is a final cost",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "description": "Information about customer (only id)",
            "format": "int32",
            "nullable": true
          },
          "auctionId": {
            "type": "integer",
            "description": "Information about auction (only id)",
            "format": "int32",
            "nullable": true
          },
          "buildingId": {
            "type": "integer",
            "description": "Information about building (only id)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PrivatizedBuildingGetDto for HTTP GET request"
      },
      "PrivatizedBuildingPostDto": {
        "type": "object",
        "properties": {
          "dateOfSale": {
            "type": "string",
            "description": "DateOfSale contains information about date of sale of the building",
            "format": "date-time"
          },
          "firstCost": {
            "type": "integer",
            "description": "FirstCost is an original auction price",
            "format": "int32"
          },
          "secondCost": {
            "type": "integer",
            "description": "SecondCost is a final cost",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "description": "Information about customer (only id)",
            "format": "int32",
            "nullable": true
          },
          "auctionId": {
            "type": "integer",
            "description": "Information about auction (only id)",
            "format": "int32",
            "nullable": true
          },
          "buildingId": {
            "type": "integer",
            "description": "Information about building (only id)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PrivatizedBuildingPostDto for HTTP POST request"
      },
      "TopAuctionGetDto": {
        "type": "object",
        "properties": {
          "organizer": {
            "type": "string",
            "description": "Organizer is a auction company",
            "nullable": true
          },
          "profit": {
            "type": "integer",
            "description": "Profit is a difference between the amount auction spent in buying and the amount earned",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "TopAuctionGetDto for request MostProfitableAuctions"
      },
      "TopCustomerGetDto": {
        "type": "object",
        "properties": {
          "fio": {
            "type": "string",
            "description": "FIO contains information about full name of customer",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total is amount of all purchased buildings",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "TopCustomerGetDto for request TopFiveCustomers"
      }
    }
  }
}